---
title: "Media exposure and use of modern family planning "
title-block-banner: true
date: "today"
subtitle: "Pakistan Demographic Health Survey Data"
format: 
  html: 
    theme: [default, custom.css, styles.scss]
    toc: true
    code-fold: true
execute: 
  freeze: true
---

Prof.Dr. Zahid Asghar, School of Economics, QAU![](images/zahid.jpg){.r-stretch}

## Research Question

#### Does modern contraceptive use among women currently in a union differ by family planning media exposure after controlling for socio-demographic variables

I have written [PDHS using R](httsp:/zahidasghar.com/pdhsurvey/ir) few weeks back to indicate that how one can easily use `DHS` data with R. This post is next phase of the earlier post. I am using in this post is `IR` which is the individual (women's) recode file. For more details about files you can visit [dhs](dhsprogram.com). USAID main sponsoring agency of DHS data has recently started using open community software for `DHS` data. I am using it for Pakistani data 2017-18 to explore whether media has a role in use of modern family planning methods or not.

## DHS data in R

Please have the dataset downloaded and ready to use. I shall use the IR file.You can download the model dataset [here](https://www.dhsprogram.com/data/Model-Datasets.cfm) For the code below to work, you must save the dataset in the same folder as your R scripts.

Install and load the packages you need. You only need to install packages once. After installing a package you can load the package using the library command.

### Load relevant packages

```{r}
#| warning: false

library(expss)    

library(writexl)
library(tidyverse) # its an umbrella library containing 9 important and widely used packages of R
library(naniar)   # to use replace_with_na function
library(haven)  # to read STATA/SPSS data
library(here)    # to check what is your file path
library(labelled) # to get labels of vairables
library(pollster)
library(gt)  # to get tables
library(gtExtras)
library(survey)  # For analysis of complex survey data sets
here::here() # check your path/directory and make sure your data is in this directory
```

## Load data

As I have my data in a folder `data` , so I am giving a parth inside here of the relevant folder and then data.

```{r}
# open your dataset
#pkir <-  read_dta(here("data","PKIR71FL.dta"))
# 
# save(pkir, file = 'data/pkir.RData') #you can save data in R. It will reduce file size and if its correctly save, you can just click on data and it will be uploaded with the command as follows:

load("D:/RepTemplates/pdhs/data/pkir.RData")

pkir |> dim()
```

## Modern contraceptive use

To `recode` modern contraceptive use into a binary variable, first I check category labels of `v313` representing methods used for family planning.

```{r}
print_labels(pkir$v313)  # print_labels command for variable labels
```

## Outcome variable

Recode `v313` as `1` if female is using modern method and 0 if otherwise. For this I use `mutate` for creating a new variable `modfp`. To create survey weight variables `wt`and finally a table of summary statistics is calculated.

```{r}
# creating a new categorical variable using mutate and case_when commands

pkir <- pkir |>
  mutate(modfp =
           case_when(v313 == 3 ~ 1,
                     v313 < 3 ~ 0 )) |>
  set_value_labels(modfp = c(yes = 1, no = 0)) |>
  set_variable_labels(modfp ="Currently used any modern method")

# creating the sampling weight variable. 
pkir <- pkir |> mutate(wt=v005/1000000)
#pkir$wt <- pkir$v005/1000000

# check with final report Table 7.3
topline(pkir, modfp, wt ) |> gt() |> gt_theme_538()


```

In the above code we use NA_integer\_ to replace as missing any values where women are not currently in use. There are 24% females who are using modern family planning methods.

## Socio-demographic variables

#### age

+--------------------------------+------+-------------------------------+
| Variable                       | Code | Col3                          |
+================================+======+===============================+
| Age                            | v013 |                               |
+--------------------------------+------+-------------------------------+
| Secondary and higer categories | v106 | Recodes into three categories |
+--------------------------------+------+-------------------------------+
| wealth quintile                | v190 |                               |
+--------------------------------+------+-------------------------------+
| region                         | v024 |                               |
+--------------------------------+------+-------------------------------+
| family planning message        | v384 |                               |
+--------------------------------+------+-------------------------------+
| union                          | v502 |                               |
+--------------------------------+------+-------------------------------+

: Socio-demographic variables

### education: recode v106 to combine secondary and higher categories

```{r}
pkir <- pkir %>%
  mutate(edu =
           case_when(v106 ==0 ~ 0,
                     v106 ==1 ~ 1,
                     v106 >=2 ~ 2)) %>%
  set_value_labels(edu = c(none = 0, primary = 1, "sec+" = 2)) %>%
  set_variable_labels(edu ="education level")
```

#### Recode family planning message

```{r}
pkir <- pkir %>%
  mutate(fpmessage =
           ifelse(v384a==1 | v384b==1 | v384c==1, 1, 0)) %>%
  set_value_labels(fpmessage = c(yes = 1, no = 0)) %>%
  set_variable_labels(fpmessage = "Exposed to TV, radio, or paper media sources") 

```

## Dealing with missing values

For all variables, replace as missing if woman is not currently in a union, and reduce your dataset to mydata

```{r}
pkir <- pkir |> mutate(wt=v005/1000000)
vars <- c("modfp","v013","edu","fpmessage","v502", "v190","v025","v024","v005", "v007", "wt","v021","v022","v001","v002","v003")
print_labels(pkir$v502)

mydata <- pkir %>%
  filter(v502 == 1) %>%
  select(all_of(vars))

```

## Set the survey design using svydesign

```{r}         
# attaching data 
attach(mydata)
```

Setting the survey design using the svydesign command from the survey package the survey design will be saved in an object named mysurvey, you can change this name to another name

```{r}
mysurvey<-svydesign(id=mydata$v021, data=mydata, strata=mydata$v022,  weight=mydata$wt, nest=T)
options(survey.lonely.psu="adjust") 
```

## Descriptive Statistics and Crosstabulations

### Descriptive table

This table will include all the variables in your analysis (would be your Table 1 of your results). The variables are tabulated among women currently in a union since this is our analytical sample you can use the following code for checking the proportions of a variable

```{r}
prop.table(svytable(~modfp, mysurvey))
```

To export a table of the weighted percentages of all your variables you can use the following code

```{r}
# dummy var for all women currently in a union
mydata <- mydata %>% mutate(fp_all = case_when(v007>0  ~ "all"))

# set expss package options to show one decimal place
expss_digits(digits=1)

tab<-  mydata %>% 
  cross_cpct(
    cell_vars = list(modfp,v013,edu,fpmessage,v190,v025,v024),
    col_vars = list(fp_all),
    weight = wt,
    expss_digits(digits=1)) 
tab <- data.frame(tab)

tab <- tab %>%
     separate(row_labels, into = c("col1", "variable", "category"), sep = "\\|") |> select(-1)
colnames(tab) <- c("variable", "category", "value")

tab |>  gt() |> tab_header("Weighted percentage of each variable")
```

Note that this table gives you weighted percentages but does not produce confidence intervals. Cross tabulations of each variable with the outcome variables (Table 2 of your results)

### Crosstabulation of modfp (modern FP use) and place of residence (v025)

```{r}
svyby(~modfp, by = ~v025 , design=mysurvey, FUN=svymean, vartype=c("se", "ci"))

```

## chi-square results

```{r}
svychisq(~modfp+v025, mysurvey)

```

### To do this for several variables at once, you can do the following

 List of variables to crosstabulate with the outcome

```{r}
variables <- c("v013","edu","fpmessage", "v190","v025","v024") 

results <- list()  # Empty list to store the crosstabulation results

# Loop through the variables
# for (var in variables) {
#   # Crosstabulation using svyby
#   crosstab <- svyby(~ modfp, by = as.formula(paste("~", var)), design = mysurvey, FUN = svymean, vartype = c("se", "ci"))
#   
#   chi_square <- svychisq(as.formula(paste("~ modfp +", var)), design = mysurvey)
#   
#   # Store results in list
#   results[[var]] <- list(crosstab = crosstab, chi_square = chi_square)
# }



```

### Access the crosstabulation results for each variable

```{r}
for (var in variables) {
  print(paste("Crosstabulation for", var))
  print(results[[var]])
}

```

## Interpretation:

The results of the crosstabulation show that all variables were significantly associated with modern contraceptive use. To produce a table of just the percentages by modfp (i.e. no C.I.s)

```{r}
tab1<-  mydata %>% 
  cross_rpct(
    cell_vars = list( v013,edu,fpmessage,v190,v025,v024,total()),
    col_vars = list(modfp),
    weight = wt,
    expss_digits(digits=1)) 

tab1 |> gt()
```

## Logistic Regressions

We will use the svyglm function from the survey package to fit regression models. This fits generalized linear models.

```{r}
# first check for correlations 
cordata <- mydata[, variables]
# Calculate the correlation matrix
cor_matrix <- cor(cordata)
print(cor_matrix)
```

### Correlation plot

```{r}
library(corrplot)

corrplot(cor_matrix)

```

There is a relatively high correlation between v025 and v190 that the researcher may need to be cautious of Unadjusted regression first we will fit an unadjusted logistic regression for family planning message exposure unadjusted with exposure to family planning messages. Ignore the warning message!

```{r}
reg1 <- svyglm(modfp~ 1 + fpmessage , design=mysurvey, family=binomial(link="logit"))

# to see the results
library(broom)
tidy(reg1)
# to get ORs
ORreg1 <- exp(reg1$coefficients )
ORreg1

```

## Interpretation

The unadjusted result shows that women currently in a union who have heard a FP message through one of the three media sources have almost twice the odds of using modern a contraceptive method compared to women with no FP message exposure.

#### Adjusted regression

Now we will include all the background variables with our main variable of interest note that for binary variables, you do not need to use as.factor but for categorial variables, you should add as.factor(var) to indicate that the variable is categorical and not continuous.

```{r}
reg2 <- svyglm(modfp~ 1 + fpmessage + as.factor(edu) + as.factor(v013) 
               + as.factor(v190) + as.factor(v024) + as.factor(v024), 
               design=mysurvey, family=binomial(link="logit"))

tidy(reg2)
# to see the results
summary(reg2)

# to get ORs
ORreg2 <- exp(reg2$coefficients )
ORreg2
```

## Interpretation:

After controlling for other variables, exposure to FP messages was found to be associated with modern contraceptive use among women currently in a union. Women with FP message exposure had 1.1 times higher odds compared to women with no exposure in using modern contraceptive methods. Though its not significant at usual significance level but literature indicates that if a variable is highly important then statistics value greater than 1 is also considered significant. This is an exploratory analysis and one should work in depth before reaching at policy results.
